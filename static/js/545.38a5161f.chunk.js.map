{"version":3,"file":"static/js/545.38a5161f.chunk.js","mappings":"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","sources":["components/ProjectCard.tsx","components/ProjectDetail.tsx","data/ProjectData.ts","data/ProjectDetailData.ts","sections/ProjectsSection.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { ProjectType } from \"../types/projectTypes\";\n\ninterface ProjectCardProps {\n  project: ProjectType;\n  onClick: () => void;\n}\n\nconst Card = styled.div`\n  width: 300px;\n  height: auto;\n  margin: 20px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s, box-shadow 0.3s;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: #ffffff;\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n`;\n\nconst Title = styled.h3`\n  margin-top: 20px; \n  padding: 0 20px;\n  text-align: center;\n  font-family: 'Pretendard6'\n  font-size: 24px;\n`;\n\nconst Description = styled.p`\n  margin-top: 10px;\n  padding: 0 20px 20px;\n  text-align: center;\n  font-family: 'Pretendard2'\n  font-size: 16px;\n`;\n\nconst TechStack = styled.p`\n  padding: 0 20px 20px;\n  text-align: center;\n  font-family: 'Pretendard4'\n  border-top: 1px solid #ddd;\n  margin-top: 20px;\n`;\n\nexport const ProjectCard: React.FC<ProjectCardProps> = ({\n  project,\n  onClick,\n}) => {\n  const [cardState, setCardState] = React.useState({\n    xDeg: 0,\n    yDeg: 0,\n  });\n\n  const onMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {\n    const { width, height } = e.currentTarget.getBoundingClientRect();\n    const x = (e.nativeEvent.offsetX - width / 2) / 10;\n    const y = -(e.nativeEvent.offsetY - height / 2) / 10;\n\n    setCardState({ xDeg: y, yDeg: x });\n  };\n\n  const onMouseLeave = () => setCardState({ xDeg: 0, yDeg: 0 });\n\n  return (\n    <Card\n      onClick={onClick}\n      onMouseMove={onMouseMove}\n      onMouseLeave={onMouseLeave}\n      style={{\n        transform: `perspective(1000px) rotateX(${cardState.xDeg}deg) rotateY(${cardState.yDeg}deg)`,\n      }}\n    >\n      <Title>{project.title}</Title>\n      <Image src={project.image} alt={project.title} />\n      <Description>{project.description}</Description>\n      <TechStack>{project.techStack}</TechStack>\n    </Card>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { ProjectDetailType } from '../types/projectTypes';\n\ninterface ProjectDetailProps {\n  detail: ProjectDetailType;\n}\n\nconst DetailSection = styled.div`\n  display: flex;\n  width: 80%;\n  margin: 20px auto;\n  padding: 20px;\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n  border-radius: 10px;\n  background-color: white;\n`;\n\nconst LeftColumn = styled.div`\n  width: 50%;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst RightColumn = styled.div`\n  width: 50%;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  max-height: 400px;\n  object-fit: cover;\n  margin-bottom: 20px;\n`;\n\nconst Title = styled.h2`\n  margin-bottom: 20px;\n`;\n\nconst GitHubLink = styled.a`\n  margin-bottom: 20px;\n  color: #333;\n`;\n\nconst ProductionPeriod = styled.p`\n  margin-bottom: 20px;\n`;\n\nconst Description = styled.p`\n  margin-bottom: 20px;\n`;\n\nconst Tech = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const ProjectDetail: React.FC<ProjectDetailProps> = ({ detail }) => {\n  return (\n    <DetailSection>\n      <LeftColumn>\n        <Image src={detail.image} alt={detail.title} />\n        <Title>{detail.title}</Title>\n        <GitHubLink href={detail.githubLink}>GitHub Link</GitHubLink>\n        <ProductionPeriod>제작 기간: {detail.productionPeriod}</ProductionPeriod>\n      </LeftColumn>\n      <RightColumn>\n        <Description>{detail.description}</Description>\n        <Tech>사용 기술: {detail.usedTechnologies.join(', ')}</Tech>\n        <Tech>기술 스택: {detail.techStack.join(', ')}</Tech>\n      </RightColumn>\n    </DetailSection>\n  );\n};\n","\nexport const ProjectData = [\n  {\n    id: 'project1',\n    title: 'Project 1',\n    description: 'This is a description of Project 1.',\n    image: 'image_url_here',\n    techStack: 'React, Node.js',\n  },\n  {\n    id: 'project2',\n    title: 'Project 2',\n    description: 'This is a description of Project 2.',\n    image: 'image_url_here',\n    techStack: 'React, Node.js',\n  },\n  {\n    id: 'project3',\n    title: 'Project 3',\n    description: 'This is a description of Project 3.',\n    image: 'image_url_here',\n    techStack: 'React, Node.js',\n  },\n  {\n    id: 'project4',\n    title: 'Project 4',\n    description: 'This is a description of Project 4.',\n    image: 'image_url_here',\n    techStack: 'React, Node.js',\n  },\n  {\n    id: 'project5',\n    title: 'Project 5',\n    description: 'This is a description of Project 5.',\n    image: 'image_url_here',\n    techStack: 'React, Node.js',\n  },\n];\n","export const ProjectDetailData = [\n  {\n    id: 'project1',\n    title: 'Detailed Project 1',\n    description: 'This is a detailed description of Project 1.',\n    image: 'detailed_image_url_here',\n    githubLink: 'https://github.com/project1',\n    productionPeriod: 'Jan 2021 - Mar 2021',\n    usedTechnologies: ['React', 'Node.js', 'MongoDB'],\n    techStack: ['Frontend', 'Backend', 'Database']\n  },\n  {\n    id: 'project2',\n    title: 'Detailed Project 2',\n    description: 'This is a detailed description of Project 2.',\n    image: 'detailed_image_url_here',\n    githubLink: 'https://github.com/project2',\n    productionPeriod: 'Apr 2021 - Jun 2021',\n    usedTechnologies: ['Vue', 'Express', 'MySQL'],\n    techStack: ['Frontend', 'Backend', 'Database']\n  },\n  {\n    id: 'project3',\n    title: 'Detailed Project 3',\n    description: 'This is a detailed description of Project 3.',\n    image: 'detailed_image_url_here',\n    githubLink: 'https://github.com/project3',\n    productionPeriod: 'Jul 2021 - Sep 2021',\n    usedTechnologies: ['Angular', 'Django', 'PostgreSQL'],\n    techStack: ['Frontend', 'Backend', 'Database']\n  },\n  {\n    id: 'project4',\n    title: 'Detailed Project 4',\n    description: 'This is a detailed description of Project 4.',\n    image: 'detailed_image_url_here',\n    githubLink: 'https://github.com/project4',\n    productionPeriod: 'Oct 2021 - Dec 2021',\n    usedTechnologies: ['React Native', 'Firebase'],\n    techStack: ['Mobile', 'Backend-as-a-Service']\n  },\n  {\n    id: 'project5',\n    title: 'Detailed Project 5',\n    description: 'This is a detailed description of Project 5.',\n    image: 'detailed_image_url_here',\n    githubLink: 'https://github.com/project5',\n    productionPeriod: 'Jan 2022 - Mar 2022',\n    usedTechnologies: ['Flutter', 'Node.js', 'SQLite'],\n    techStack: ['Mobile', 'Backend', 'Database']\n  },\n];\n","import React, { useState } from \"react\";\nimport { Link } from \"react-scroll\";\nimport LinkIcon from \"../assets/icons/link.png\";\nimport styled from \"styled-components\";\nimport { ProjectType, ProjectDetailType } from \"../types/projectTypes\";\n\nimport LeftArrowIcon from \"../assets/icons/left-arrow.png\";\nimport RightArrowIcon from \"../assets/icons/right-arrow.png\";\nimport LeftFillArrowIcon from \"../assets/icons/left-fill-arrow.png\";\nimport RightFillArrowIcon from \"../assets/icons/right-fill-arrow.png\";\n\nimport { ProjectCard } from \"../components/ProjectCard\";\nimport { ProjectDetail } from \"../components/ProjectDetail\";\nimport { ProjectData } from \"../data/ProjectData\";\nimport { ProjectDetailData } from \"../data/ProjectDetailData\";\n\nconst Section = styled.div`\n  position: relative;\n  padding-top: 85px;\n  margin-top: -100px;\n  margin-bottom: 180px;\n  overflow: hidden;\n`;\n\nconst TitleContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 40px;\n`;\n\nconst TitleLink = styled.img`\n  height: 50px;\n  margin-right: 20px;\n`;\n\nconst TitleText = styled.div`\n  font-size: 60px;\n  padding: 12px 0px;\n  font-family: Pretendard9;\n`;\n\nconst ProjectContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  position: relative;\n  overflow: hidden;\n  width: calc(300px * 3 + 40px * 2);\n  margin: 20px auto;\n`;\n\nconst ArrowButton = styled.button`\n  cursor: pointer;\n  background: transparent;\n  border: none;\n  position: absolute;\n  top: 40%;\n  transform: translateY(-50%);\n  z-index: 10;\n`;\n\nconst LeftArrow = styled(ArrowButton)`\n  left: calc(50% - (300px * 3 + 40px * 2) / 2 - 60px);\n`;\n\nconst RightArrow = styled(ArrowButton)`\n  right: calc(50% - (300px * 3 + 40px * 2) / 2 - 60px);\n`;\n\nconst ArrowImg = styled.img`\n  width: 50px;\n  height: 50px;\n  display: block;\n`;\n\nfunction ProjectsSection() {\n  const [selectedProject, setSelectedProject] = useState<ProjectType | null>(null);\n  const [selectedProjectDetail, setSelectedProjectDetail] = useState<ProjectDetailType | null>(null);\n  \n  const [startIndex, setStartIndex] = useState(0);\n  const [isHoveringLeft, setIsHoveringLeft] = useState(false);\n  const [isHoveringRight, setIsHoveringRight] = useState(false);\n\n\n  const nextProjects = () => {\n    setStartIndex(prevIndex => (prevIndex + 1) % ProjectData.length);\n  };\n\n  const prevProjects = () => {\n    setStartIndex(prevIndex => (prevIndex - 1 + ProjectData.length) % ProjectData.length);\n  };\n  \n  const onProjectClick = (project: ProjectType) => {\n    setSelectedProject(project);\n    const projectDetail = ProjectDetailData.find(detail => detail.id === project.id);\n    setSelectedProjectDetail(projectDetail || null);\n  };\n\n  const displayedProjects = [];\n  for (let i = 0; i < 3; i++) {\n    displayedProjects.push(ProjectData[(startIndex + i) % ProjectData.length]);\n  }\n\n  return (\n    <Section id=\"projects\">\n      <Link to=\"projects\" smooth={true} duration={500}>\n        <TitleContainer>\n          <TitleLink src={LinkIcon} alt=\"LinkIcon\" />\n          <TitleText>Projects</TitleText>\n        </TitleContainer>\n      </Link>\n      <LeftArrow\n        onClick={prevProjects}\n        onMouseEnter={() => setIsHoveringLeft(true)}\n        onMouseLeave={() => setIsHoveringLeft(false)}\n      >\n        <ArrowImg\n          src={isHoveringLeft ? LeftFillArrowIcon : LeftArrowIcon}\n          alt=\"Previous\"\n          style={{ opacity: 1 }}\n        />\n      </LeftArrow>\n      <ProjectContainer>\n        {displayedProjects.map((project) => (\n          <ProjectCard\n            key={project.id}\n            project={project}\n            onClick={() => onProjectClick(project)}\n          />\n        ))}\n      </ProjectContainer>\n      <RightArrow\n        onClick={nextProjects}\n        onMouseEnter={() => setIsHoveringRight(true)}\n        onMouseLeave={() => setIsHoveringRight(false)}\n      >\n        <ArrowImg\n          src={isHoveringRight ? RightFillArrowIcon : RightArrowIcon}\n          alt=\"Next\"\n          style={{ opacity: 1 }}\n        />\n      </RightArrow>\n      {selectedProjectDetail && <ProjectDetail detail={selectedProjectDetail} />}\n    </Section>\n  );\n}\n\nexport default ProjectsSection;\n"],"names":["Card","styled","div","_templateObject","_taggedTemplateLiteral","Image","img","_templateObject2","Title","h3","_templateObject3","Description","p","_templateObject4","TechStack","_templateObject5","ProjectCard","_ref","project","onClick","cardState","setCardState","React","xDeg","yDeg","_jsxs","onMouseMove","e","width","height","currentTarget","getBoundingClientRect","x","nativeEvent","offsetX","y","offsetY","onMouseLeave","style","transform","concat","children","_jsx","title","src","image","alt","description","techStack","DetailSection","LeftColumn","RightColumn","h2","GitHubLink","a","_templateObject6","ProductionPeriod","_templateObject7","_templateObject8","Tech","_templateObject9","ProjectDetail","detail","href","githubLink","productionPeriod","usedTechnologies","join","ProjectData","id","ProjectDetailData","Section","TitleContainer","TitleLink","TitleText","ProjectContainer","ArrowButton","button","LeftArrow","RightArrow","ArrowImg","selectedProject","setSelectedProject","useState","selectedProjectDetail","setSelectedProjectDetail","startIndex","setStartIndex","isHoveringLeft","setIsHoveringLeft","isHoveringRight","setIsHoveringRight","displayedProjects","i","push","length","Link","to","smooth","duration","LinkIcon","prevProjects","prevIndex","onMouseEnter","LeftFillArrowIcon","LeftArrowIcon","opacity","map","projectDetail","find","onProjectClick","nextProjects","RightFillArrowIcon","RightArrowIcon"],"sourceRoot":""}